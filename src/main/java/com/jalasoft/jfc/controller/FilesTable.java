package com.jalasoft.jfc.controller;

import com.jalasoft.jfc.model.hibernate.FilesMd5;
import com.jalasoft.jfc.model.hibernate.FilesMd5Repository;

import io.swagger.annotations.Api;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

@Api(value = "FilesTable", description = "REST API related to FilesTable Entity")
@RestController
@RequestMapping("/api")
public class FilesTable {

    // This means to get the bean called userRepository
    @Autowired

    // Which is auto-generated by Spring, we will use it to handle the data
    private FilesMd5Repository filesMd5Repository;

    @PostMapping(path="/insert") // Map ONLY POST Requests
    public @ResponseBody
    String addNewUser (@RequestParam String md5
            , @RequestParam String filePath) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        FilesMd5 filesMd5 = new FilesMd5();
        filesMd5.setMd5(md5);
        filesMd5.setFilePath(filePath);

        filesMd5Repository.save(filesMd5);
        return "Saved";
    }

    @GetMapping(path="/showAll")
    public @ResponseBody Iterable<FilesMd5> getAllUsers() {
        // This returns a JSON or XML with the users
        return filesMd5Repository.findAll();
    }
}
